generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

// model Product {
//   id              Int               @id @default(autoincrement())
//   name            String            @db.NVarChar(50)
//   description     String
//   imageUrl        String            @db.NVarChar(500)
//   price           Int
//   createAt        DateTime          @default(now())
//   updateAt        DateTime          @updatedAt
//   productCategory ProductCategory[]

//   @@map("products")
// }

model Product {
  id             String      @id @default(uuid())
  name           String
  description    String
  imageUrl       String
  price          Int
  category       Category    @relation(fields: [categoryId], references: [id], onUpdate: NoAction)
  categoryId     String
  subCategory    SubCategory @relation(fields: [subCategoryId], references: [id], onUpdate: NoAction)
  subCategoryId  String
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
  // stock          Int
  // isFeatured     Boolean     @default(false)
  // isBestSeller   Boolean     @default(false)
  // isPublished    Boolean     @default(true)
  isDiscounted   Boolean     @default(false)
  discountAmount Float?

  @@index([categoryId])
  @@index([subCategoryId])
  @@map("products")
}

model SubCategory {
  id          String    @id @default(uuid())
  name        String
  description String?
  products    Product[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  category    Category  @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId  String

  @@index([categoryId])
  @@map("subCategories")
}

model Category {
  id            String        @id @default(uuid())
  name          String
  description   String?
  subCategories SubCategory[]
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  products      Product[]

  @@index([id])
  @@index([name])
  @@map("categories")
}
